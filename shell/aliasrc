# ~/ cleaning aliases
alias arduino-cli='arduino-cli --config-file $XDG_CONFIG_HOME/arduino15/arduino-cli.yaml'
alias code='code --extensions-dir "$XDG_DATA_HOME/vscode"'
alias emcc='emcc --cache "$EM_CACHE"'
alias gpg2='gpg2 --homedir "$XDG_DATA_HOME"/gnupg'
alias irssi='irssi --config="$XDG_CONFIG_HOME"/irssi/config --home="$XDG_DATA_HOME"/irssi'
alias nvidia-settings='nvidia-settings --config="$XDG_CONFIG_HOME"/nvidia/settings'
alias sqlite3='sqlite3 -init "$XDG_CONFIG_HOME"/sqlite3/sqliterc'
alias units='units --history "$XDG_CACHE_HOME"/units_history'
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'
alias xbindkeys='xbindkeys -f "${XDG_CONFIG_HOME:-$HOME/.config}"/xbindkeys/config'
alias yarn='yarn --use-yarnrc "$XDG_CONFIG_HOME/yarn/config"'

# My custom aliaseses
[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"
alias bathelp='bat --plain --language=help'
alias cd1='cd ..'
alias cd2='cd ../../'
alias cd3='cd ../../../'
alias cd4='cd ../../../../'
alias cd5='cd ../../../../../'
alias clang-format='clang-format --verbose'
[ "$XDG_SESSION_TYPE" = "x11" ] \
	&& alias clipboard='xclip -selection clipboard' \
	|| alias clipboard='wl-copy'
alias chmod='chmod --changes'
alias chown='chown --changes'
alias cp='cp --interactive --verbose'
alias df='df --human-readable'
alias diff='diff --color=auto'
alias du='du --human-readable'
alias dwmblocksrestart='pkill -SIGUSR1 dwmblocks'
alias egrep='egrep --colour=auto'
alias feh='$TERMINAL -e feh'
alias fgrep='fgrep --colour=auto'
alias free='free --human --wide --total'
alias fzf='fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"'
alias grep='grep --colour=auto'
alias ip='ip --color=auto'
alias kernel='uname --kernel-release'
alias la='ls -l --human-readable --all'
alias lA='ls -l --human-readable --almost-all'
alias ll='ls -l --human-readable'
alias lower='tr "[:upper:]" "[:lower]"'
alias lsblk-label='lsblk -o name,fstype,mountpoint,label,partlabel,size'
alias ls='exa --across --color=automatic  --color-scale --icons \
	--group-directories-first --binary --group --header --git'
# alias ls='ls --color=auto'
alias lspkgs='pacman -Qe --color=always | $PAGER -R'
alias mkdir='mkdir --parents --verbose'
alias more=less
alias mv='mv --verbose'
alias newsboat-repo='newsboat --url-file="$HOME"/.config/newsboat/repos-urls' \
	'--cache-file="$HOME"/.local/share/newsboat/cache-repos.db --refresh-on-start'
alias np='nano --nowrap PKGBUILD'
alias nvim='env -u VIMINIT nvim'
alias nvim-qt='env -u VIMINIT nvim-qt'
alias open=xdg-open
alias port='netstat --tcp --udp --listening --all --numeric --program --wide'
alias publicIP='printf "%s\n" "$(curl --silent ifconfig.me)"'
alias :q='exit'
alias randomcolor='printf "#$(openssl rand -hex 3 | tr "[:lower:]" "[:upper:]")\n"'
alias rmdir='rmdir --verbose'
alias rm='rm --verbose'
alias ssh-agentd='eval $(ssh-agent -s)'
alias suvim='doas vim'
alias terminal="\$TERMINAL"
alias tmux='tmux -f $XDG_CONFIG_HOME/tmux/tmux.conf'
alias updateDwmblocks='pkill -SIGUSR1 dwmblocks'
alias updateMirrors='doas reflector --age 12 --country Portugal,USA,World \
	--protocol https --sort rate --save /etc/pacman.d/mirrorlist'
alias upper='tr "[:lower:]" "[:upper:]"'
alias yarn='yarn --use-yarnrc $XDG_CONFIG_HOME/yarn/config'
alias yay='yay --sudo notify-sudo'
alias youtube-dl='yt-dlp'
alias ytdownload='yt-dlp --embed-subs --all-subs --embed-thumbnail --embed-metadata \
	--embed-chapters'
eval "$(thefuck --alias)"

# Start - Custom functions

# ex - archive extractor
# usage: ex <file>
ex ()
{
	if [ -f "$1" ]
	then
		case $1 in
			*.tar.bz2)   tar xjf "$1"    ;;
			*.tar.gz)    tar xzf "$1"    ;;
			*.bz2)       bunzip2 "$1"    ;;
			*.rar)       unrar x "$1"    ;;
			*.gz)        gunzip "$1"     ;;
			*.tar)       tar xf "$1"     ;;
			*.tbz2)      tar xjf "$1"    ;;
			*.tgz)       tar xzf "$1"    ;;
			*.zip)       unzip "$1"      ;;
			*.Z)         uncompress "$1" ;;
			*.7z)        7z x "$1"       ;;
			*)           echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

mkcd() {
	mkdir "$@"
	cd "$1" || exit
}

vimfzf () {
      wd="$(pwd)"
      file=$(find -L "$HOME" \
	      ! -path "$HOME/.cache/*" \
	      ! -path "*/.stfolder/*" \
	      ! -path "*/.stversions/*" \
	      ! -path "*/__pycache__/*" \
	      -maxdepth 7 2>/dev/null | sk --exact --preview='bat --color=always {}')
      [ -f "$file" ] && cd "$(dirname "$file")" || exit
      [ -d "$file" ] && cd "$file" || exit
      [ -f "$file" ] || [ -d "$file" ] && $EDITOR "$file" && cd "$wd" || exit
}

# git repository greeter
last_repository=
check_directory_for_new_repository() {
	current_repository=$(git rev-parse --show-toplevel 2> /dev/null)
	
	[ "$current_repository" ] && [ "$current_repository" != "$last_repository" ] && \
		onefetch
	last_repository=$current_repository
}

cd() {
	builtin cd "$@" || exit
	check_directory_for_new_repository
}

screenresolution() {
	xrandr | awk '/\*/ {print $1}'
}

# optional, greet also when opening shell directly in repository directory
# adds time to startup
check_directory_for_new_repository

# Refer to:
#   https://github.com/dylanaraps/pywal

# Set wal color scheme on load if:
#    - a cached color scheme exists and
#    - we are in an interactive shell and
#    - we are not in a login shell
#
# This to avoid setting the color scheme when ssh-ing into the
# box as well as when using other tools like scp. 

# if [ -f ${XDG_CACHE_HOME:-~/.cache}/wal/sequences ]
# then
# 	if [[ $- == *i* ]]
# 	then
# 		if [ $ZSH_VERSION ]
# 		then
# 			[[ ! -o login ]] && LOAD_SEQUENCES=1
# 		else
# 			shopt -q login_shell || LOAD_SEQUENCES=1
# 		fi

# 		if [[ ! -z $LOAD_SEQUENCES ]]
# 		then
# 			(/bin/cat ${XDG_CACHE_HOME:-~/.cache}/wal/sequences &)
# 			unset LOAD_SEQUENCES
# 			clear
# 		fi
# 	fi
# fi

precmd () {
	print -Pn "\e]0;%~\a"
}

help() {
	"$@" --help 2>&1 | bathelp
}

# battheme() {
# 	bat --list-themes | fzf --preview="bat --theme={} --color=always $@"
# }

# END - Custom functions

# vim:ft=sh

# An example configuration file for MPD.
# Read the user manual for documentation: http://www.musicpd.org/doc/user/

#############################################################################
db_file			"~/.local/share/mpd/database"
log_file		"~/.local/share/mpd/mpd.log"
pid_file		"~/.local/state/mpd/mpd.pid"
state_file		"~/.local/state/mpd/mpdstate"
music_directory		"~/Música"
playlist_directory	"~/Música/.mpd_playlists"
# audio_output {
# 	type		"pulse"
# 	name		"pulse audio"
# }
audio_output {
        type            "pipewire"
        name            "PipeWire Sound Server"
}

audio_output {
	type		"fifo"
	name		"FIFO"
	path		"/tmp/mpd.fifo"
	format		"44100:16:2"
	# buffer_time	"100000"		# set 'buffer_time' parameter of your MPD audio output to '100000' (100ms) or lower if you experience synchronization issues between audio and visualization
}

# General music daemon options ################################################
#user				"user"
#group				"nogroup"

# Setting "restore_paused" to "yes" puts MPD into pause mode instead
# of starting playback after startup.
#restore_paused "no"

# This setting enables MPD to create playlists in a format usable by other
# music players.
#save_absolute_paths_in_playlists	"no"

# This setting defines a list of tag types that will be extracted during the
# audio file discovery process. The complete list of possible values can be
# found in the user manual.
#metadata_to_use	"artist,album,title,track,name,genre,date,composer,performer,disc"

# This setting enables automatic update of MPD's database when files in
# music_directory are changed.
auto_update	"yes"

# For network
#bind_to_address		"127.0.0.1"
#
# And for Unix Socket
#bind_to_address		"~/.mpd/socket"
#
# This setting is the TCP port that is desired for the daemon to get assigned
# to.
port				"6600"

##############################################################################

#
# ~/.bashrc
#

[[ $- != *i* ]] && return

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion
[ -r "$(which doas)" ] && complete -cf doas
[ -f "${XDG_CONFIG_HOME:-HOME/.config}"/shell/aliasrc ] \
	&& . "${XDG_CONFIG_HOME:-HOME/.config}"/shell/aliasrc
[ -f "${XDG_CONFIG_HOME:-HOME/.config}"/bash/bash-completion ] \
	&& . "${XDG_CONFIG_HOME:-HOME/.config}"/bash/bash-completion

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
		;;
	screen*)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
		;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color}; then
	if [[ -f /etc/DIR_COLORS ]] ; then
		eval $(dircolors -b /etc/DIR_COLORS)
	elif [[ -f "$HOME"/.dir_colors ]] ; then
		eval $(dircolors -b "$HOME"/.dir_colors)
	elif [[ -f ${XDG_DATA_HOME:-$HOME/.local/share}/LS_COLORS ]] ; then
		eval $(dircolors -b ${XDG_DATA_HOME:-$HOME/.local/share}/LS_COLORS)
	fi
	if [[ ${EUID} == 0 ]] ; then
		PS1='\[\033[01;31m\][\h\[\033[01;36m\] \W\[\033[01;31m\]]\$\[\033[00m\] '
	else
		#export PS1="┌──\[\e[0m\]\[\e[1m\][ \[\e[0;1;38;5;48m\]\u\[\e[0;1;1;38;5;226m\]@\[\e[0;1;38;5;196m\]\h\[\e[0;1m\] \`if [ \$(stat --format %u .) = 0 ]; then printf  🔐; fi\` \w ]\[\e[0m\]\[\e[0;3;96m\]\$(git branch --show-current 2>/dev/null | sed 's/^/ (/;s/$/)/;') \[\e[0m\]( \`if [ \$? = 0 ]; then printf '\[\e[0;1;38;5;48m\]✓'; else printf '\[\e[0;1;38;5;196m\]✕'; fi\`\[\e[0m\] )\n└──  \[\e[0;1;38;5;50m\]$ \[\e[0m\]"
		export PS1="┌──\[\e[0m\]\[\e[1m\][ \[\e[0;1;38;5;48m\]\u\[\e[0;1;1;38;5;226m\]@\[\e[0;1;38;5;196m\]\h\[\e[0;1m\] \`if [ \$(stat --format %u .) = 0 ]; then printf  🔐; fi\` \w ]\[\e[0m\]\[\e[0;3;96m\]\$(git branch --show-current 2>/dev/null | sed 's/^/ (/;s/$/)/;') \[\e[0m\]( \`if [ \$? = 0 ]; then printf '\[\e[0;1;38;5;48m\]✓'; else printf '\[\e[0;1;38;5;196m\]✕'; fi\`\[\e[0m\] )\n└──  \[\e[0;1;38;5;50m\]$ \[\e[0m\]"
	fi
else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh


if command -v fastfetch &> /dev/null
then
    fastfetch
else
    neofetch
fi
